spring.application.name=PoliticalApp
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
# PostgreSQL Database Connection
spring.datasource.url=jdbc:postgresql://localhost:5432/political_db
spring.datasource.username=postgres
spring.datasource.password=walrusman36*
spring.datasource.driver-class-name=org.postgresql.Driver
# Flyway Settings
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
# Security Settings
# application.properties
logging.level.org.springframework.security=DEBUG
# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=jgyoung618@gmail.com
spring.mail.password=iufr tjqe wwbu npcq
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# JWT Configuration
jwt.secret=7zKluiS1qP83Nap17Hy/K1hGFYiCLBtN+v3deCDsAjly7w4DZzu4mpYebKfg16cvSRZcQL5NrpRRJ9WxUZisOQ
jwt.expirationMs=604800000
management.endpoints.web.exposure.include=*
spring.redis.host=localhost
spring.redis.port=6379
google.api.key=AIzaSyC3FJJbtsNF2Xmrw2s64d9DlG2wCUJKn7o
API_KEY=AIzaSyC3FJJbtsNF2Xmrw2s64d9DlG2wCUJKn7o
DEFAULT_ADDRESS=Washington, DC
logging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# File upload settings
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true
# Web resources
spring.web.resources.static-locations=classpath:/static/,file:uploads/
# Logging for file upload issues
logging.level.org.springframework.web.multipart=DEBUG
# Allow all paths to be used in file save operations
spring.servlet.multipart.location=${java.io.tmpdir}
app.base-url=http://localhost:8080
# application.properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Add these to your application.properties or application.yml
# Frontend URL
app.frontend-url=http://localhost:3000
# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=your-google-client-id
spring.security.oauth2.client.registration.google.client-secret=your-google-client-secret
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.facebook.client-id=your-facebook-client-id
spring.security.oauth2.client.registration.facebook.client-secret=your-facebook-client-secret
spring.security.oauth2.client.registration.facebook.scope=email,public_profile
# For Twitter, you'll need a custom implementation since it uses OAuth 1.0a
# Template Configuration
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html



